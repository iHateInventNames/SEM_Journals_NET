//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SEM.Tests.SemWcfServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SemWcfServiceReference.IServiceJournalsAccess")]
    public interface IServiceJournalsAccess {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceJournalsAccess/GetJournal", ReplyAction="http://tempuri.org/IServiceJournalsAccess/GetJournalResponse")]
        byte[] GetJournal(string login, string password, int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceJournalsAccess/GetJournal", ReplyAction="http://tempuri.org/IServiceJournalsAccess/GetJournalResponse")]
        System.Threading.Tasks.Task<byte[]> GetJournalAsync(string login, string password, int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceJournalsAccess/GetMySubscriptions", ReplyAction="http://tempuri.org/IServiceJournalsAccess/GetMySubscriptionsResponse")]
        SEM.Core.Models.Subscription[] GetMySubscriptions(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceJournalsAccess/GetMySubscriptions", ReplyAction="http://tempuri.org/IServiceJournalsAccess/GetMySubscriptionsResponse")]
        System.Threading.Tasks.Task<SEM.Core.Models.Subscription[]> GetMySubscriptionsAsync(string login, string password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceJournalsAccessChannel : SEM.Tests.SemWcfServiceReference.IServiceJournalsAccess, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceJournalsAccessClient : System.ServiceModel.ClientBase<SEM.Tests.SemWcfServiceReference.IServiceJournalsAccess>, SEM.Tests.SemWcfServiceReference.IServiceJournalsAccess {
        
        public ServiceJournalsAccessClient() {
        }
        
        public ServiceJournalsAccessClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceJournalsAccessClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceJournalsAccessClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceJournalsAccessClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public byte[] GetJournal(string login, string password, int value) {
            return base.Channel.GetJournal(login, password, value);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetJournalAsync(string login, string password, int value) {
            return base.Channel.GetJournalAsync(login, password, value);
        }
        
        public SEM.Core.Models.Subscription[] GetMySubscriptions(string login, string password) {
            return base.Channel.GetMySubscriptions(login, password);
        }
        
        public System.Threading.Tasks.Task<SEM.Core.Models.Subscription[]> GetMySubscriptionsAsync(string login, string password) {
            return base.Channel.GetMySubscriptionsAsync(login, password);
        }
    }
}
